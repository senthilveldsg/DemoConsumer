/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.dcsg.pc.eventing.schema.syndigopimcopy;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class EventMessage extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6353720144835941766L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EventMessage\",\"namespace\":\"com.dcsg.pc.eventing.schema.syndigopimcopy\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"string\"]},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"data\",\"type\":{\"type\":\"record\",\"name\":\"EventMessageData\",\"fields\":[{\"name\":\"attributes\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"DataValues\",\"fields\":[{\"name\":\"group\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Group\",\"fields\":[{\"name\":\"valuesMap\",\"type\":{\"type\":\"map\",\"values\":\"DataValues\"}}]},\"java-class\":\"java.util.List\"}],\"default\":null},{\"name\":\"values\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AttributeValue\",\"fields\":[{\"name\":\"value\",\"type\":\"string\"}]},\"java-class\":\"java.util.List\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"relationships\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"RelationshipLink\",\"fields\":[{\"name\":\"attributes\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"DataValues\"}]},{\"name\":\"relTo\",\"type\":{\"type\":\"record\",\"name\":\"Link\",\"fields\":[{\"name\":\"data\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"RelationshipData\",\"fields\":[{\"name\":\"attributes\",\"type\":{\"type\":\"map\",\"values\":\"DataValues\"}}]}],\"default\":null},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"}]}}]},\"java-class\":\"java.util.List\"}}],\"default\":null}]}},{\"name\":\"properties\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"EventMessageProperties\",\"fields\":[{\"name\":\"createdBy\",\"type\":\"string\"},{\"name\":\"createdDate\",\"type\":\"string\"},{\"name\":\"modifiedBy\",\"type\":\"string\"},{\"name\":\"modifiedDate\",\"type\":\"string\"}]}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<EventMessage> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<EventMessage> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<EventMessage> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<EventMessage> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<EventMessage> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this EventMessage to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a EventMessage from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a EventMessage instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static EventMessage fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence id;
  private java.lang.CharSequence type;
  private java.lang.CharSequence name;
  private com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageData data;
  private com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties properties;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public EventMessage() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param type The new value for type
   * @param name The new value for name
   * @param data The new value for data
   * @param properties The new value for properties
   */
  public EventMessage(java.lang.CharSequence id, java.lang.CharSequence type, java.lang.CharSequence name, com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageData data, com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties properties) {
    this.id = id;
    this.type = type;
    this.name = name;
    this.data = data;
    this.properties = properties;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return type;
    case 2: return name;
    case 3: return data;
    case 4: return properties;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: type = (java.lang.CharSequence)value$; break;
    case 2: name = (java.lang.CharSequence)value$; break;
    case 3: data = (com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageData)value$; break;
    case 4: properties = (com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public java.lang.CharSequence getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'data' field.
   * @return The value of the 'data' field.
   */
  public com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageData getData() {
    return data;
  }


  /**
   * Sets the value of the 'data' field.
   * @param value the value to set.
   */
  public void setData(com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageData value) {
    this.data = value;
  }

  /**
   * Gets the value of the 'properties' field.
   * @return The value of the 'properties' field.
   */
  public com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties getProperties() {
    return properties;
  }


  /**
   * Sets the value of the 'properties' field.
   * @param value the value to set.
   */
  public void setProperties(com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties value) {
    this.properties = value;
  }

  /**
   * Creates a new EventMessage RecordBuilder.
   * @return A new EventMessage RecordBuilder
   */
  public static com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessage.Builder newBuilder() {
    return new com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessage.Builder();
  }

  /**
   * Creates a new EventMessage RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new EventMessage RecordBuilder
   */
  public static com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessage.Builder newBuilder(com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessage.Builder other) {
    if (other == null) {
      return new com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessage.Builder();
    } else {
      return new com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessage.Builder(other);
    }
  }

  /**
   * Creates a new EventMessage RecordBuilder by copying an existing EventMessage instance.
   * @param other The existing instance to copy.
   * @return A new EventMessage RecordBuilder
   */
  public static com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessage.Builder newBuilder(com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessage other) {
    if (other == null) {
      return new com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessage.Builder();
    } else {
      return new com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessage.Builder(other);
    }
  }

  /**
   * RecordBuilder for EventMessage instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EventMessage>
    implements org.apache.avro.data.RecordBuilder<EventMessage> {

    private java.lang.CharSequence id;
    private java.lang.CharSequence type;
    private java.lang.CharSequence name;
    private com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageData data;
    private com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageData.Builder dataBuilder;
    private com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties properties;
    private com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties.Builder propertiesBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessage.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.type)) {
        this.type = data().deepCopy(fields()[1].schema(), other.type);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.data)) {
        this.data = data().deepCopy(fields()[3].schema(), other.data);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (other.hasDataBuilder()) {
        this.dataBuilder = com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageData.newBuilder(other.getDataBuilder());
      }
      if (isValidValue(fields()[4], other.properties)) {
        this.properties = data().deepCopy(fields()[4].schema(), other.properties);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasPropertiesBuilder()) {
        this.propertiesBuilder = com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties.newBuilder(other.getPropertiesBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing EventMessage instance
     * @param other The existing instance to copy.
     */
    private Builder(com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessage other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.type)) {
        this.type = data().deepCopy(fields()[1].schema(), other.type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.data)) {
        this.data = data().deepCopy(fields()[3].schema(), other.data);
        fieldSetFlags()[3] = true;
      }
      this.dataBuilder = null;
      if (isValidValue(fields()[4], other.properties)) {
        this.properties = data().deepCopy(fields()[4].schema(), other.properties);
        fieldSetFlags()[4] = true;
      }
      this.propertiesBuilder = null;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessage.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessage.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.lang.CharSequence getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessage.Builder setType(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.type = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessage.Builder clearType() {
      type = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessage.Builder setName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.name = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessage.Builder clearName() {
      name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'data' field.
      * @return The value.
      */
    public com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageData getData() {
      return data;
    }


    /**
      * Sets the value of the 'data' field.
      * @param value The value of 'data'.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessage.Builder setData(com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageData value) {
      validate(fields()[3], value);
      this.dataBuilder = null;
      this.data = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'data' field has been set.
      * @return True if the 'data' field has been set, false otherwise.
      */
    public boolean hasData() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'data' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageData.Builder getDataBuilder() {
      if (dataBuilder == null) {
        if (hasData()) {
          setDataBuilder(com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageData.newBuilder(data));
        } else {
          setDataBuilder(com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageData.newBuilder());
        }
      }
      return dataBuilder;
    }

    /**
     * Sets the Builder instance for the 'data' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessage.Builder setDataBuilder(com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageData.Builder value) {
      clearData();
      dataBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'data' field has an active Builder instance
     * @return True if the 'data' field has an active Builder instance
     */
    public boolean hasDataBuilder() {
      return dataBuilder != null;
    }

    /**
      * Clears the value of the 'data' field.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessage.Builder clearData() {
      data = null;
      dataBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'properties' field.
      * @return The value.
      */
    public com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties getProperties() {
      return properties;
    }


    /**
      * Sets the value of the 'properties' field.
      * @param value The value of 'properties'.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessage.Builder setProperties(com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties value) {
      validate(fields()[4], value);
      this.propertiesBuilder = null;
      this.properties = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'properties' field has been set.
      * @return True if the 'properties' field has been set, false otherwise.
      */
    public boolean hasProperties() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'properties' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties.Builder getPropertiesBuilder() {
      if (propertiesBuilder == null) {
        if (hasProperties()) {
          setPropertiesBuilder(com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties.newBuilder(properties));
        } else {
          setPropertiesBuilder(com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties.newBuilder());
        }
      }
      return propertiesBuilder;
    }

    /**
     * Sets the Builder instance for the 'properties' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessage.Builder setPropertiesBuilder(com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties.Builder value) {
      clearProperties();
      propertiesBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'properties' field has an active Builder instance
     * @return True if the 'properties' field has an active Builder instance
     */
    public boolean hasPropertiesBuilder() {
      return propertiesBuilder != null;
    }

    /**
      * Clears the value of the 'properties' field.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessage.Builder clearProperties() {
      properties = null;
      propertiesBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public EventMessage build() {
      try {
        EventMessage record = new EventMessage();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.type = fieldSetFlags()[1] ? this.type : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.name = fieldSetFlags()[2] ? this.name : (java.lang.CharSequence) defaultValue(fields()[2]);
        if (dataBuilder != null) {
          try {
            record.data = this.dataBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("data"));
            throw e;
          }
        } else {
          record.data = fieldSetFlags()[3] ? this.data : (com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageData) defaultValue(fields()[3]);
        }
        if (propertiesBuilder != null) {
          try {
            record.properties = this.propertiesBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("properties"));
            throw e;
          }
        } else {
          record.properties = fieldSetFlags()[4] ? this.properties : (com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties) defaultValue(fields()[4]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<EventMessage>
    WRITER$ = (org.apache.avro.io.DatumWriter<EventMessage>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<EventMessage>
    READER$ = (org.apache.avro.io.DatumReader<EventMessage>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.id);
    }

    out.writeString(this.type);

    out.writeString(this.name);

    this.data.customEncode(out);

    if (this.properties == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.properties.customEncode(out);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.id = null;
      } else {
        this.id = in.readString(this.id instanceof Utf8 ? (Utf8)this.id : null);
      }

      this.type = in.readString(this.type instanceof Utf8 ? (Utf8)this.type : null);

      this.name = in.readString(this.name instanceof Utf8 ? (Utf8)this.name : null);

      if (this.data == null) {
        this.data = new com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageData();
      }
      this.data.customDecode(in);

      if (in.readIndex() != 1) {
        in.readNull();
        this.properties = null;
      } else {
        if (this.properties == null) {
          this.properties = new com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties();
        }
        this.properties.customDecode(in);
      }

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.id = null;
          } else {
            this.id = in.readString(this.id instanceof Utf8 ? (Utf8)this.id : null);
          }
          break;

        case 1:
          this.type = in.readString(this.type instanceof Utf8 ? (Utf8)this.type : null);
          break;

        case 2:
          this.name = in.readString(this.name instanceof Utf8 ? (Utf8)this.name : null);
          break;

        case 3:
          if (this.data == null) {
            this.data = new com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageData();
          }
          this.data.customDecode(in);
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.properties = null;
          } else {
            if (this.properties == null) {
              this.properties = new com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties();
            }
            this.properties.customDecode(in);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










