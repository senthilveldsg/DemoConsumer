/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.dcsg.pc.eventing.schema.link;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class EntityLink extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3076590858212814792L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EntityLink\",\"namespace\":\"com.dcsg.pc.eventing.schema.link\",\"fields\":[{\"name\":\"eventId\",\"type\":\"string\"},{\"name\":\"ecode\",\"type\":[\"string\",\"null\"],\"default\":\"null\"},{\"name\":\"styleCode\",\"type\":\"string\"},{\"name\":\"skuNumber\",\"type\":[\"string\",\"null\"],\"default\":\"null\"},{\"name\":\"linkType\",\"type\":{\"type\":\"enum\",\"name\":\"EntityLinkType\",\"symbols\":[\"SkuToStyleLink\",\"StyleToEcodeLink\"]}},{\"name\":\"linkAction\",\"type\":{\"type\":\"enum\",\"name\":\"EntityLinkAction\",\"namespace\":\"com.dcsg.pc.eventing.schema.common\",\"symbols\":[\"ADD\",\"DELETE\"]}},{\"name\":\"createdBy\",\"type\":\"string\"},{\"name\":\"createdOn\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<EntityLink> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<EntityLink> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<EntityLink> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<EntityLink> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<EntityLink> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this EntityLink to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a EntityLink from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a EntityLink instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static EntityLink fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence eventId;
  private java.lang.CharSequence ecode;
  private java.lang.CharSequence styleCode;
  private java.lang.CharSequence skuNumber;
  private com.dcsg.pc.eventing.schema.link.EntityLinkType linkType;
  private com.dcsg.pc.eventing.schema.common.EntityLinkAction linkAction;
  private java.lang.CharSequence createdBy;
  private java.time.Instant createdOn;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public EntityLink() {}

  /**
   * All-args constructor.
   * @param eventId The new value for eventId
   * @param ecode The new value for ecode
   * @param styleCode The new value for styleCode
   * @param skuNumber The new value for skuNumber
   * @param linkType The new value for linkType
   * @param linkAction The new value for linkAction
   * @param createdBy The new value for createdBy
   * @param createdOn The new value for createdOn
   */
  public EntityLink(java.lang.CharSequence eventId, java.lang.CharSequence ecode, java.lang.CharSequence styleCode, java.lang.CharSequence skuNumber, com.dcsg.pc.eventing.schema.link.EntityLinkType linkType, com.dcsg.pc.eventing.schema.common.EntityLinkAction linkAction, java.lang.CharSequence createdBy, java.time.Instant createdOn) {
    this.eventId = eventId;
    this.ecode = ecode;
    this.styleCode = styleCode;
    this.skuNumber = skuNumber;
    this.linkType = linkType;
    this.linkAction = linkAction;
    this.createdBy = createdBy;
    this.createdOn = createdOn.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return eventId;
    case 1: return ecode;
    case 2: return styleCode;
    case 3: return skuNumber;
    case 4: return linkType;
    case 5: return linkAction;
    case 6: return createdBy;
    case 7: return createdOn;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: eventId = (java.lang.CharSequence)value$; break;
    case 1: ecode = (java.lang.CharSequence)value$; break;
    case 2: styleCode = (java.lang.CharSequence)value$; break;
    case 3: skuNumber = (java.lang.CharSequence)value$; break;
    case 4: linkType = (com.dcsg.pc.eventing.schema.link.EntityLinkType)value$; break;
    case 5: linkAction = (com.dcsg.pc.eventing.schema.common.EntityLinkAction)value$; break;
    case 6: createdBy = (java.lang.CharSequence)value$; break;
    case 7: createdOn = (java.time.Instant)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'eventId' field.
   * @return The value of the 'eventId' field.
   */
  public java.lang.CharSequence getEventId() {
    return eventId;
  }


  /**
   * Sets the value of the 'eventId' field.
   * @param value the value to set.
   */
  public void setEventId(java.lang.CharSequence value) {
    this.eventId = value;
  }

  /**
   * Gets the value of the 'ecode' field.
   * @return The value of the 'ecode' field.
   */
  public java.lang.CharSequence getEcode() {
    return ecode;
  }


  /**
   * Sets the value of the 'ecode' field.
   * @param value the value to set.
   */
  public void setEcode(java.lang.CharSequence value) {
    this.ecode = value;
  }

  /**
   * Gets the value of the 'styleCode' field.
   * @return The value of the 'styleCode' field.
   */
  public java.lang.CharSequence getStyleCode() {
    return styleCode;
  }


  /**
   * Sets the value of the 'styleCode' field.
   * @param value the value to set.
   */
  public void setStyleCode(java.lang.CharSequence value) {
    this.styleCode = value;
  }

  /**
   * Gets the value of the 'skuNumber' field.
   * @return The value of the 'skuNumber' field.
   */
  public java.lang.CharSequence getSkuNumber() {
    return skuNumber;
  }


  /**
   * Sets the value of the 'skuNumber' field.
   * @param value the value to set.
   */
  public void setSkuNumber(java.lang.CharSequence value) {
    this.skuNumber = value;
  }

  /**
   * Gets the value of the 'linkType' field.
   * @return The value of the 'linkType' field.
   */
  public com.dcsg.pc.eventing.schema.link.EntityLinkType getLinkType() {
    return linkType;
  }


  /**
   * Sets the value of the 'linkType' field.
   * @param value the value to set.
   */
  public void setLinkType(com.dcsg.pc.eventing.schema.link.EntityLinkType value) {
    this.linkType = value;
  }

  /**
   * Gets the value of the 'linkAction' field.
   * @return The value of the 'linkAction' field.
   */
  public com.dcsg.pc.eventing.schema.common.EntityLinkAction getLinkAction() {
    return linkAction;
  }


  /**
   * Sets the value of the 'linkAction' field.
   * @param value the value to set.
   */
  public void setLinkAction(com.dcsg.pc.eventing.schema.common.EntityLinkAction value) {
    this.linkAction = value;
  }

  /**
   * Gets the value of the 'createdBy' field.
   * @return The value of the 'createdBy' field.
   */
  public java.lang.CharSequence getCreatedBy() {
    return createdBy;
  }


  /**
   * Sets the value of the 'createdBy' field.
   * @param value the value to set.
   */
  public void setCreatedBy(java.lang.CharSequence value) {
    this.createdBy = value;
  }

  /**
   * Gets the value of the 'createdOn' field.
   * @return The value of the 'createdOn' field.
   */
  public java.time.Instant getCreatedOn() {
    return createdOn;
  }


  /**
   * Sets the value of the 'createdOn' field.
   * @param value the value to set.
   */
  public void setCreatedOn(java.time.Instant value) {
    this.createdOn = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Creates a new EntityLink RecordBuilder.
   * @return A new EntityLink RecordBuilder
   */
  public static com.dcsg.pc.eventing.schema.link.EntityLink.Builder newBuilder() {
    return new com.dcsg.pc.eventing.schema.link.EntityLink.Builder();
  }

  /**
   * Creates a new EntityLink RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new EntityLink RecordBuilder
   */
  public static com.dcsg.pc.eventing.schema.link.EntityLink.Builder newBuilder(com.dcsg.pc.eventing.schema.link.EntityLink.Builder other) {
    if (other == null) {
      return new com.dcsg.pc.eventing.schema.link.EntityLink.Builder();
    } else {
      return new com.dcsg.pc.eventing.schema.link.EntityLink.Builder(other);
    }
  }

  /**
   * Creates a new EntityLink RecordBuilder by copying an existing EntityLink instance.
   * @param other The existing instance to copy.
   * @return A new EntityLink RecordBuilder
   */
  public static com.dcsg.pc.eventing.schema.link.EntityLink.Builder newBuilder(com.dcsg.pc.eventing.schema.link.EntityLink other) {
    if (other == null) {
      return new com.dcsg.pc.eventing.schema.link.EntityLink.Builder();
    } else {
      return new com.dcsg.pc.eventing.schema.link.EntityLink.Builder(other);
    }
  }

  /**
   * RecordBuilder for EntityLink instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EntityLink>
    implements org.apache.avro.data.RecordBuilder<EntityLink> {

    private java.lang.CharSequence eventId;
    private java.lang.CharSequence ecode;
    private java.lang.CharSequence styleCode;
    private java.lang.CharSequence skuNumber;
    private com.dcsg.pc.eventing.schema.link.EntityLinkType linkType;
    private com.dcsg.pc.eventing.schema.common.EntityLinkAction linkAction;
    private java.lang.CharSequence createdBy;
    private java.time.Instant createdOn;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.dcsg.pc.eventing.schema.link.EntityLink.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.eventId)) {
        this.eventId = data().deepCopy(fields()[0].schema(), other.eventId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.ecode)) {
        this.ecode = data().deepCopy(fields()[1].schema(), other.ecode);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.styleCode)) {
        this.styleCode = data().deepCopy(fields()[2].schema(), other.styleCode);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.skuNumber)) {
        this.skuNumber = data().deepCopy(fields()[3].schema(), other.skuNumber);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.linkType)) {
        this.linkType = data().deepCopy(fields()[4].schema(), other.linkType);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.linkAction)) {
        this.linkAction = data().deepCopy(fields()[5].schema(), other.linkAction);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.createdBy)) {
        this.createdBy = data().deepCopy(fields()[6].schema(), other.createdBy);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.createdOn)) {
        this.createdOn = data().deepCopy(fields()[7].schema(), other.createdOn);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
    }

    /**
     * Creates a Builder by copying an existing EntityLink instance
     * @param other The existing instance to copy.
     */
    private Builder(com.dcsg.pc.eventing.schema.link.EntityLink other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.eventId)) {
        this.eventId = data().deepCopy(fields()[0].schema(), other.eventId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.ecode)) {
        this.ecode = data().deepCopy(fields()[1].schema(), other.ecode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.styleCode)) {
        this.styleCode = data().deepCopy(fields()[2].schema(), other.styleCode);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.skuNumber)) {
        this.skuNumber = data().deepCopy(fields()[3].schema(), other.skuNumber);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.linkType)) {
        this.linkType = data().deepCopy(fields()[4].schema(), other.linkType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.linkAction)) {
        this.linkAction = data().deepCopy(fields()[5].schema(), other.linkAction);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.createdBy)) {
        this.createdBy = data().deepCopy(fields()[6].schema(), other.createdBy);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.createdOn)) {
        this.createdOn = data().deepCopy(fields()[7].schema(), other.createdOn);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'eventId' field.
      * @return The value.
      */
    public java.lang.CharSequence getEventId() {
      return eventId;
    }


    /**
      * Sets the value of the 'eventId' field.
      * @param value The value of 'eventId'.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.link.EntityLink.Builder setEventId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.eventId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'eventId' field has been set.
      * @return True if the 'eventId' field has been set, false otherwise.
      */
    public boolean hasEventId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'eventId' field.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.link.EntityLink.Builder clearEventId() {
      eventId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'ecode' field.
      * @return The value.
      */
    public java.lang.CharSequence getEcode() {
      return ecode;
    }


    /**
      * Sets the value of the 'ecode' field.
      * @param value The value of 'ecode'.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.link.EntityLink.Builder setEcode(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.ecode = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'ecode' field has been set.
      * @return True if the 'ecode' field has been set, false otherwise.
      */
    public boolean hasEcode() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'ecode' field.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.link.EntityLink.Builder clearEcode() {
      ecode = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'styleCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getStyleCode() {
      return styleCode;
    }


    /**
      * Sets the value of the 'styleCode' field.
      * @param value The value of 'styleCode'.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.link.EntityLink.Builder setStyleCode(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.styleCode = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'styleCode' field has been set.
      * @return True if the 'styleCode' field has been set, false otherwise.
      */
    public boolean hasStyleCode() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'styleCode' field.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.link.EntityLink.Builder clearStyleCode() {
      styleCode = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'skuNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getSkuNumber() {
      return skuNumber;
    }


    /**
      * Sets the value of the 'skuNumber' field.
      * @param value The value of 'skuNumber'.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.link.EntityLink.Builder setSkuNumber(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.skuNumber = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'skuNumber' field has been set.
      * @return True if the 'skuNumber' field has been set, false otherwise.
      */
    public boolean hasSkuNumber() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'skuNumber' field.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.link.EntityLink.Builder clearSkuNumber() {
      skuNumber = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'linkType' field.
      * @return The value.
      */
    public com.dcsg.pc.eventing.schema.link.EntityLinkType getLinkType() {
      return linkType;
    }


    /**
      * Sets the value of the 'linkType' field.
      * @param value The value of 'linkType'.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.link.EntityLink.Builder setLinkType(com.dcsg.pc.eventing.schema.link.EntityLinkType value) {
      validate(fields()[4], value);
      this.linkType = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'linkType' field has been set.
      * @return True if the 'linkType' field has been set, false otherwise.
      */
    public boolean hasLinkType() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'linkType' field.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.link.EntityLink.Builder clearLinkType() {
      linkType = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'linkAction' field.
      * @return The value.
      */
    public com.dcsg.pc.eventing.schema.common.EntityLinkAction getLinkAction() {
      return linkAction;
    }


    /**
      * Sets the value of the 'linkAction' field.
      * @param value The value of 'linkAction'.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.link.EntityLink.Builder setLinkAction(com.dcsg.pc.eventing.schema.common.EntityLinkAction value) {
      validate(fields()[5], value);
      this.linkAction = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'linkAction' field has been set.
      * @return True if the 'linkAction' field has been set, false otherwise.
      */
    public boolean hasLinkAction() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'linkAction' field.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.link.EntityLink.Builder clearLinkAction() {
      linkAction = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdBy' field.
      * @return The value.
      */
    public java.lang.CharSequence getCreatedBy() {
      return createdBy;
    }


    /**
      * Sets the value of the 'createdBy' field.
      * @param value The value of 'createdBy'.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.link.EntityLink.Builder setCreatedBy(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.createdBy = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'createdBy' field has been set.
      * @return True if the 'createdBy' field has been set, false otherwise.
      */
    public boolean hasCreatedBy() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'createdBy' field.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.link.EntityLink.Builder clearCreatedBy() {
      createdBy = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdOn' field.
      * @return The value.
      */
    public java.time.Instant getCreatedOn() {
      return createdOn;
    }


    /**
      * Sets the value of the 'createdOn' field.
      * @param value The value of 'createdOn'.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.link.EntityLink.Builder setCreatedOn(java.time.Instant value) {
      validate(fields()[7], value);
      this.createdOn = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'createdOn' field has been set.
      * @return True if the 'createdOn' field has been set, false otherwise.
      */
    public boolean hasCreatedOn() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'createdOn' field.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.link.EntityLink.Builder clearCreatedOn() {
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public EntityLink build() {
      try {
        EntityLink record = new EntityLink();
        record.eventId = fieldSetFlags()[0] ? this.eventId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.ecode = fieldSetFlags()[1] ? this.ecode : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.styleCode = fieldSetFlags()[2] ? this.styleCode : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.skuNumber = fieldSetFlags()[3] ? this.skuNumber : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.linkType = fieldSetFlags()[4] ? this.linkType : (com.dcsg.pc.eventing.schema.link.EntityLinkType) defaultValue(fields()[4]);
        record.linkAction = fieldSetFlags()[5] ? this.linkAction : (com.dcsg.pc.eventing.schema.common.EntityLinkAction) defaultValue(fields()[5]);
        record.createdBy = fieldSetFlags()[6] ? this.createdBy : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.createdOn = fieldSetFlags()[7] ? this.createdOn : (java.time.Instant) defaultValue(fields()[7]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<EntityLink>
    WRITER$ = (org.apache.avro.io.DatumWriter<EntityLink>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<EntityLink>
    READER$ = (org.apache.avro.io.DatumReader<EntityLink>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










