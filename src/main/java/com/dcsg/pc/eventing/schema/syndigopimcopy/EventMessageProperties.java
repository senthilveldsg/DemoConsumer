/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.dcsg.pc.eventing.schema.syndigopimcopy;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class EventMessageProperties extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7675078808993770022L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EventMessageProperties\",\"namespace\":\"com.dcsg.pc.eventing.schema.syndigopimcopy\",\"fields\":[{\"name\":\"createdBy\",\"type\":\"string\"},{\"name\":\"createdDate\",\"type\":\"string\"},{\"name\":\"modifiedBy\",\"type\":\"string\"},{\"name\":\"modifiedDate\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<EventMessageProperties> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<EventMessageProperties> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<EventMessageProperties> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<EventMessageProperties> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<EventMessageProperties> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this EventMessageProperties to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a EventMessageProperties from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a EventMessageProperties instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static EventMessageProperties fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence createdBy;
  private java.lang.CharSequence createdDate;
  private java.lang.CharSequence modifiedBy;
  private java.lang.CharSequence modifiedDate;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public EventMessageProperties() {}

  /**
   * All-args constructor.
   * @param createdBy The new value for createdBy
   * @param createdDate The new value for createdDate
   * @param modifiedBy The new value for modifiedBy
   * @param modifiedDate The new value for modifiedDate
   */
  public EventMessageProperties(java.lang.CharSequence createdBy, java.lang.CharSequence createdDate, java.lang.CharSequence modifiedBy, java.lang.CharSequence modifiedDate) {
    this.createdBy = createdBy;
    this.createdDate = createdDate;
    this.modifiedBy = modifiedBy;
    this.modifiedDate = modifiedDate;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return createdBy;
    case 1: return createdDate;
    case 2: return modifiedBy;
    case 3: return modifiedDate;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: createdBy = (java.lang.CharSequence)value$; break;
    case 1: createdDate = (java.lang.CharSequence)value$; break;
    case 2: modifiedBy = (java.lang.CharSequence)value$; break;
    case 3: modifiedDate = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'createdBy' field.
   * @return The value of the 'createdBy' field.
   */
  public java.lang.CharSequence getCreatedBy() {
    return createdBy;
  }


  /**
   * Sets the value of the 'createdBy' field.
   * @param value the value to set.
   */
  public void setCreatedBy(java.lang.CharSequence value) {
    this.createdBy = value;
  }

  /**
   * Gets the value of the 'createdDate' field.
   * @return The value of the 'createdDate' field.
   */
  public java.lang.CharSequence getCreatedDate() {
    return createdDate;
  }


  /**
   * Sets the value of the 'createdDate' field.
   * @param value the value to set.
   */
  public void setCreatedDate(java.lang.CharSequence value) {
    this.createdDate = value;
  }

  /**
   * Gets the value of the 'modifiedBy' field.
   * @return The value of the 'modifiedBy' field.
   */
  public java.lang.CharSequence getModifiedBy() {
    return modifiedBy;
  }


  /**
   * Sets the value of the 'modifiedBy' field.
   * @param value the value to set.
   */
  public void setModifiedBy(java.lang.CharSequence value) {
    this.modifiedBy = value;
  }

  /**
   * Gets the value of the 'modifiedDate' field.
   * @return The value of the 'modifiedDate' field.
   */
  public java.lang.CharSequence getModifiedDate() {
    return modifiedDate;
  }


  /**
   * Sets the value of the 'modifiedDate' field.
   * @param value the value to set.
   */
  public void setModifiedDate(java.lang.CharSequence value) {
    this.modifiedDate = value;
  }

  /**
   * Creates a new EventMessageProperties RecordBuilder.
   * @return A new EventMessageProperties RecordBuilder
   */
  public static com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties.Builder newBuilder() {
    return new com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties.Builder();
  }

  /**
   * Creates a new EventMessageProperties RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new EventMessageProperties RecordBuilder
   */
  public static com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties.Builder newBuilder(com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties.Builder other) {
    if (other == null) {
      return new com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties.Builder();
    } else {
      return new com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties.Builder(other);
    }
  }

  /**
   * Creates a new EventMessageProperties RecordBuilder by copying an existing EventMessageProperties instance.
   * @param other The existing instance to copy.
   * @return A new EventMessageProperties RecordBuilder
   */
  public static com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties.Builder newBuilder(com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties other) {
    if (other == null) {
      return new com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties.Builder();
    } else {
      return new com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties.Builder(other);
    }
  }

  /**
   * RecordBuilder for EventMessageProperties instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EventMessageProperties>
    implements org.apache.avro.data.RecordBuilder<EventMessageProperties> {

    private java.lang.CharSequence createdBy;
    private java.lang.CharSequence createdDate;
    private java.lang.CharSequence modifiedBy;
    private java.lang.CharSequence modifiedDate;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.createdBy)) {
        this.createdBy = data().deepCopy(fields()[0].schema(), other.createdBy);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.createdDate)) {
        this.createdDate = data().deepCopy(fields()[1].schema(), other.createdDate);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.modifiedBy)) {
        this.modifiedBy = data().deepCopy(fields()[2].schema(), other.modifiedBy);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.modifiedDate)) {
        this.modifiedDate = data().deepCopy(fields()[3].schema(), other.modifiedDate);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing EventMessageProperties instance
     * @param other The existing instance to copy.
     */
    private Builder(com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.createdBy)) {
        this.createdBy = data().deepCopy(fields()[0].schema(), other.createdBy);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.createdDate)) {
        this.createdDate = data().deepCopy(fields()[1].schema(), other.createdDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.modifiedBy)) {
        this.modifiedBy = data().deepCopy(fields()[2].schema(), other.modifiedBy);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.modifiedDate)) {
        this.modifiedDate = data().deepCopy(fields()[3].schema(), other.modifiedDate);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'createdBy' field.
      * @return The value.
      */
    public java.lang.CharSequence getCreatedBy() {
      return createdBy;
    }


    /**
      * Sets the value of the 'createdBy' field.
      * @param value The value of 'createdBy'.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties.Builder setCreatedBy(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.createdBy = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'createdBy' field has been set.
      * @return True if the 'createdBy' field has been set, false otherwise.
      */
    public boolean hasCreatedBy() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'createdBy' field.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties.Builder clearCreatedBy() {
      createdBy = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdDate' field.
      * @return The value.
      */
    public java.lang.CharSequence getCreatedDate() {
      return createdDate;
    }


    /**
      * Sets the value of the 'createdDate' field.
      * @param value The value of 'createdDate'.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties.Builder setCreatedDate(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.createdDate = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'createdDate' field has been set.
      * @return True if the 'createdDate' field has been set, false otherwise.
      */
    public boolean hasCreatedDate() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'createdDate' field.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties.Builder clearCreatedDate() {
      createdDate = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'modifiedBy' field.
      * @return The value.
      */
    public java.lang.CharSequence getModifiedBy() {
      return modifiedBy;
    }


    /**
      * Sets the value of the 'modifiedBy' field.
      * @param value The value of 'modifiedBy'.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties.Builder setModifiedBy(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.modifiedBy = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'modifiedBy' field has been set.
      * @return True if the 'modifiedBy' field has been set, false otherwise.
      */
    public boolean hasModifiedBy() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'modifiedBy' field.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties.Builder clearModifiedBy() {
      modifiedBy = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'modifiedDate' field.
      * @return The value.
      */
    public java.lang.CharSequence getModifiedDate() {
      return modifiedDate;
    }


    /**
      * Sets the value of the 'modifiedDate' field.
      * @param value The value of 'modifiedDate'.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties.Builder setModifiedDate(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.modifiedDate = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'modifiedDate' field has been set.
      * @return True if the 'modifiedDate' field has been set, false otherwise.
      */
    public boolean hasModifiedDate() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'modifiedDate' field.
      * @return This builder.
      */
    public com.dcsg.pc.eventing.schema.syndigopimcopy.EventMessageProperties.Builder clearModifiedDate() {
      modifiedDate = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public EventMessageProperties build() {
      try {
        EventMessageProperties record = new EventMessageProperties();
        record.createdBy = fieldSetFlags()[0] ? this.createdBy : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.createdDate = fieldSetFlags()[1] ? this.createdDate : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.modifiedBy = fieldSetFlags()[2] ? this.modifiedBy : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.modifiedDate = fieldSetFlags()[3] ? this.modifiedDate : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<EventMessageProperties>
    WRITER$ = (org.apache.avro.io.DatumWriter<EventMessageProperties>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<EventMessageProperties>
    READER$ = (org.apache.avro.io.DatumReader<EventMessageProperties>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.createdBy);

    out.writeString(this.createdDate);

    out.writeString(this.modifiedBy);

    out.writeString(this.modifiedDate);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.createdBy = in.readString(this.createdBy instanceof Utf8 ? (Utf8)this.createdBy : null);

      this.createdDate = in.readString(this.createdDate instanceof Utf8 ? (Utf8)this.createdDate : null);

      this.modifiedBy = in.readString(this.modifiedBy instanceof Utf8 ? (Utf8)this.modifiedBy : null);

      this.modifiedDate = in.readString(this.modifiedDate instanceof Utf8 ? (Utf8)this.modifiedDate : null);

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.createdBy = in.readString(this.createdBy instanceof Utf8 ? (Utf8)this.createdBy : null);
          break;

        case 1:
          this.createdDate = in.readString(this.createdDate instanceof Utf8 ? (Utf8)this.createdDate : null);
          break;

        case 2:
          this.modifiedBy = in.readString(this.modifiedBy instanceof Utf8 ? (Utf8)this.modifiedBy : null);
          break;

        case 3:
          this.modifiedDate = in.readString(this.modifiedDate instanceof Utf8 ? (Utf8)this.modifiedDate : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










